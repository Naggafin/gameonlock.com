"""
Django settings for airplane_site project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import logging
import os
from pathlib import Path

from csp.constants import (
	NONCE,
	NONE,
	SELF,
	STRICT_DYNAMIC,
	UNSAFE_EVAL,
	UNSAFE_INLINE,
)
from debug_toolbar.settings import PANELS_DEFAULTS
from django.utils.translation import gettext_lazy as _
from djmoney.money import Money
from dotenv import load_dotenv

# from oscar.defaults import *  # noqa: F403

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

load_dotenv(BASE_DIR / ".env")


ADMIN_EMAIL = "webmaster@gameonlock.com"


# Application definition

INSTALLED_APPS = [
	"gameonlock",
	"sportsbetting",
	"golpayment",
	"notifications",
	# django
	"django.contrib.admin",
	"django.contrib.auth",
	"django.contrib.contenttypes",
	"django.contrib.sessions",
	"django.contrib.messages",
	"django.contrib.staticfiles",
	"django.contrib.sites",
	"django.contrib.flatpages",
	"django.contrib.humanize",
	# oscar
	# "oscar.config.Shop",
	# "oscar.apps.analytics.apps.AnalyticsConfig",
	# "oscar.apps.checkout.apps.CheckoutConfig",
	# "oscar.apps.address.apps.AddressConfig",
	# "oscar.apps.shipping.apps.ShippingConfig",
	# "oscar.apps.catalogue.apps.CatalogueConfig",
	# "oscar.apps.catalogue.reviews.apps.CatalogueReviewsConfig",
	# "oscar.apps.communication.apps.CommunicationConfig",
	# "oscar.apps.partner.apps.PartnerConfig",
	# "oscar.apps.payment.apps.PaymentConfig",
	# "oscar.apps.basket.apps.BasketConfig",
	# "oscar.apps.offer.apps.OfferConfig",
	# "oscar.apps.order.apps.OrderConfig",
	# "oscar.apps.customer.apps.CustomerConfig",
	# "oscar.apps.search.apps.SearchConfig",
	# "oscar.apps.voucher.apps.VoucherConfig",
	# "oscar.apps.wishlists.apps.WishlistsConfig",
	# "oscar.apps.dashboard.apps.DashboardConfig",
	# "oscar.apps.dashboard.reports.apps.ReportsDashboardConfig",
	# "oscar.apps.dashboard.users.apps.UsersDashboardConfig",
	# "oscar.apps.dashboard.orders.apps.OrdersDashboardConfig",
	# "oscar.apps.dashboard.catalogue.apps.CatalogueDashboardConfig",
	# "oscar.apps.dashboard.offers.apps.OffersDashboardConfig",
	# "oscar.apps.dashboard.partners.apps.PartnersDashboardConfig",
	# "oscar.apps.dashboard.pages.apps.PagesDashboardConfig",
	# "oscar.apps.dashboard.ranges.apps.RangesDashboardConfig",
	# "oscar.apps.dashboard.reviews.apps.ReviewsDashboardConfig",
	# "oscar.apps.dashboard.vouchers.apps.VouchersDashboardConfig",
	# "oscar.apps.dashboard.communications.apps.CommunicationsDashboardConfig",
	# "oscar.apps.dashboard.shipping.apps.ShippingDashboardConfig",
	# allauth
	"allauth",
	"allauth.account",
	"allauth.socialaccount",
	"allauth.socialaccount.providers.facebook",
	"allauth.socialaccount.providers.google",
	"allauth.socialaccount.providers.twitter",
	# wagtail
	"wagtail.contrib.forms",
	"wagtail.contrib.redirects",
	"wagtail.contrib.legacy.richtext",
	"wagtail.contrib.sitemaps",
	"wagtail.contrib.routable_page",
	"wagtail.embeds",
	"wagtail.sites",
	"wagtail.users",
	"wagtail.snippets",
	"wagtail.documents",
	"wagtail.images",
	"wagtail.search",
	"wagtail.admin",
	"wagtail",
	"wagtail_localize",
	"wagtail_localize.locales",
	"wagtail_newsletter",
	"wagtailmetadata",
	"puput",
	# other 3rd party dependencies
	"cachalot",
	"celery",
	"django_celery_beat",
	"modelcluster",
	"taggit",
	"guardian",
	"paypal.standard.ipn",
	"paypal.standard.pdt",
	"widget_tweaks",
	"slippers",
	"haystack",
	"treebeard",
	"sorl.thumbnail",
	"django_tables2",
	"template_partials",
	"django_htmx",
	"django_user_agents",
	"django_extensions",
	"django_countries",
	"view_breadcrumbs",
	"csp",
	"django_contact_form",
	"honeypot",
	"yesglot",
]

SITE_ID = 1

MIDDLEWARE = [
	"django.middleware.security.SecurityMiddleware",
	"django.contrib.sessions.middleware.SessionMiddleware",
	"csp.middleware.CSPMiddleware",
	"django.middleware.locale.LocaleMiddleware",
	"django.middleware.common.CommonMiddleware",
	"django.middleware.csrf.CsrfViewMiddleware",
	"django.contrib.auth.middleware.AuthenticationMiddleware",
	"django_htmx.middleware.HtmxMiddleware",
	"django.contrib.messages.middleware.MessageMiddleware",
	"django.middleware.clickjacking.XFrameOptionsMiddleware",
	"allauth.account.middleware.AccountMiddleware",
	# "oscar.apps.basket.middleware.BasketMiddleware",
	"wagtail.contrib.redirects.middleware.RedirectMiddleware",
	"django.contrib.flatpages.middleware.FlatpageFallbackMiddleware",
	"django_user_agents.middleware.UserAgentMiddleware",
	"notifications.middleware.SSEMessageMiddleware",
]

ROOT_URLCONF = "gameonlock.urls"

TEMPLATES = [
	{
		"BACKEND": "django.template.backends.django.DjangoTemplates",
		"DIRS": [BASE_DIR / "templates"],
		"APP_DIRS": True,
		"OPTIONS": {
			"context_processors": [
				"django.template.context_processors.debug",
				"django.template.context_processors.request",
				"django.contrib.auth.context_processors.auth",
				"django.contrib.messages.context_processors.messages",
				# "oscar.apps.search.context_processors.search_form",
				# "oscar.apps.checkout.context_processors.checkout",
				# "oscar.apps.communication.notifications.context_processors.notifications",
				# "oscar.core.context_processors.metadata",
				"gameonlock.context.site_vars",
			],
		},
	},
]

WSGI_APPLICATION = "gameonlock.wsgi.application"
ASGI_APPLICATION = "gameonlock.asgi.application"


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
	{
		"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
	},
	{
		"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
	},
	{
		"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
	},
	{
		"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
	},
]

AUTHENTICATION_BACKENDS = [
	"allauth.account.auth_backends.AuthenticationBackend",
	"guardian.backends.ObjectPermissionBackend",
	"django.contrib.auth.backends.ModelBackend",
]

LOGIN_REDIRECT_URL = "/"

AUTH_USER_MODEL = "gameonlock.User"


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGES = [
	("en", _("English")),
	("es", _("Spanish")),
]

LANGUAGE_CODE = "en"

TIME_ZONE = "UTC"

USE_L10N = True

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATICFILES_FINDERS = [
	"django.contrib.staticfiles.finders.FileSystemFinder",
	"django.contrib.staticfiles.finders.AppDirectoriesFinder",
]

STATICFILES_DIRS = [BASE_DIR / "static"]

STATIC_ROOT = BASE_DIR / "public" / "static"
STATIC_URL = "static/"

MEDIA_ROOT = BASE_DIR / "public" / "media"
MEDIA_URL = "media/"


# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# Telegram

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
TELEGRAM_LOGS_CHAT_ID = os.getenv("TELEGRAM_LOGS_CHAT_ID")


LOGGING = {
	"version": 1,
	"disable_existing_loggers": False,
	"filters": {
		"require_debug_true": {
			"()": "django.utils.log.RequireDebugTrue",
		},
		"require_debug_false": {
			"()": "django.utils.log.RequireDebugFalse",
		},
	},
	"formatters": {
		"django.server": {
			"()": "django.utils.log.ServerFormatter",
			"format": "[{server_time}] {message}",
			"style": "{",
		},
		"verbose": {
			"format": "{asctime} - {name} - {levelname} - {funcName} - {message}",
			"style": "{",
		},
	},
	"handlers": {
		"console": {
			"level": "DEBUG",
			"filters": ["require_debug_true"],
			"class": "logging.StreamHandler",
		},
		"django.server": {
			"level": "INFO",
			"class": "logging.StreamHandler",
			"formatter": "django.server",
		},
		"mail_admins": {
			"level": "ERROR",
			"filters": ["require_debug_false"],
			"class": "django.utils.log.AdminEmailHandler",
		},
		"file": {
			"level": "DEBUG",
			"filters": ["require_debug_false"],
			"class": "logging.FileHandler",
			"filename": BASE_DIR / "django.log",
			"formatter": "verbose",
		},
		"telegram": {
			"level": "ERROR",
			"filters": ["require_debug_false"],
			"class": "telegram_handler.TelegramHandler",
			"token": TELEGRAM_TOKEN,
			"chat_id": TELEGRAM_LOGS_CHAT_ID,
		},
	},
	"loggers": {
		"django": {
			"handlers": ["console", "mail_admins", "file", "telegram"],
			"level": "INFO",
		},
		"django.server": {
			"handlers": ["django.server"],
			"level": "INFO",
			"propagate": False,
		},
		"htmx_utils.middleware": {
			"handlers": ["console"],
			"level": "DEBUG",
		},
	},
}


DATA_UPLOAD_MAX_NUMBER_FIELDS = 10_000

DEFAULT_FROM_EMAIL = "no-reply@gameonlock.com"
NOTIFY_EMAILS = ["admin@gameonlock.com"]


SPORTS = {
	"default_ticket_name": "GOL SPORTS TICKET",
	"SPORTS_API_PROVIDER_URL": "https://api.the-odds-api.com/v4/sports",
	"SPORTS_API_KEY": os.environ.get("SPORTS_API_KEY"),
	"UNIX_TIME": True,
	"ROUND_SPREADS": True,
	"ROUND_TOTALS": True,
	"TOTALS_SPREAD": 2,
	"PAIR_PROMINENCE": "unfavored",
	"LONG_NAMES_PREFERRED": ["NCAAF"],
	"MIN_BET": Money(5, "USD"),
	"MIN_NUM_BETS": 4,
	"BASE_BET_STAKES": 10,
	"BET_MULTIPLIER": 5,
	"BET_STEP": 1,
}


SITE_VARS = {
	"bet_slip_config": {
		"MIN_BET": SPORTS["MIN_BET"],
		"MIN_NUM_BETS": SPORTS["MIN_NUM_BETS"],
		"BASE_BET_STAKES": SPORTS["BASE_BET_STAKES"],
		"BET_MULTIPLIER": SPORTS["BET_MULTIPLIER"],
		"BET_STEP": SPORTS["BET_STEP"],
	},
}

MIGRATION_MODULES = {"puput": "gameonlock.puput_migrations"}


# wagtail / puput / newsletter

WAGTAIL_SITE_NAME = _("Game-on-Lock Blog")
WAGTAIL_I18N_ENABLED = True
WAGTAIL_CONTENT_LANGUAGES = LANGUAGES
# WAGTAILDOCS_EXTENSIONS = ['csv', 'docx', 'key', 'odt', 'pdf', 'pptx', 'rtf', 'txt', 'xlsx', 'zip']
PUPUT_AS_PLUGIN = True
PUPUT_COMMENTS_PROVIDER = "puput.comments.DjangoCommentsProvider"
PUPUT_BLOG_MODEL = "gameonlock.pages.BlogPageAbstract"
PUPUT_ENTRY_MODEL = "gameonlock.pages.EntryPageAbstract"
WAGTAIL_NEWSLETTER_FROM_NAME = "Game on Lock"
WAGTAIL_NEWSLETTER_REPLY_TO = DEFAULT_FROM_EMAIL
WAGTAIL_NEWSLETTER_CAMPAIGN_BACKEND = "gameonlock.newsletter_backends.LocalSMTPBackend"
WAGTAILMETADATA_IMAGE_FILTER = "fill-1200x630"


# channel

CHANNEL_LAYERS = {
	"default": {
		"BACKEND": "channels_redis.core.RedisChannelLayer",
		"CONFIG": {
			"hosts": [{"address": f"{os.environ.get('REDIS_URL')}/1"}],
		},
	}
}


# django-paypal

PAYPAL_IDENTITY_TOKEN = os.environ.get("PAYPAL_IDENTITY_TOKEN", "test-identity-token")


# django-allauth

ACCOUNT_FORMS = {"signup": "gameonlock.forms.SignupForm"}
ACCOUNT_LOGIN_METHOD = {"email", "username"}
SOCIALACCOUNT_PROVIDERS = {
	"google": {
		"APP": {
			"client_id": os.getenv("ALLAUTH_GOOGLE_CLIENT_ID"),
			"secret": os.getenv("ALLAUTH_GOOGLE_SECRET"),
			"key": os.getenv("ALLAUTH_GOOGLE_KEY"),
		}
	},
	"facebook": {
		"APP": {},
	},
}


# django-oscar

OSCAR_SHOP_NAME = "Game-on-Lock Shop"
OSCAR_SHOP_TAGLINE = ""
OSCAR_INITIAL_ORDER_STATUS = "Pending"
OSCAR_INITIAL_LINE_STATUS = "Pending"
OSCAR_ORDER_STATUS_PIPELINE = {
	"Pending": (
		"Being processed",
		"Cancelled",
	),
	"Being processed": (
		"Processed",
		"Cancelled",
	),
	"Cancelled": (),
}
OSCAR_PRODUCT_MODEL = "catalogue.Product"
OSCAR_ALLOW_ANON_CHECKOUT = True
OSCAR_FROM_EMAIL = DEFAULT_FROM_EMAIL
OSCAR_BASKET_COOKIE_OPEN = "gameonlock_open_basket"
OSCAR_DEFAULT_CURRENCY = "USD"
OSCAR_GOOGLE_ANALYTICS_ID = None


# django-silk

SILKY_PYTHON_PROFILER = False
SILKY_PYTHON_PROFILER_BINARY = True
SILKY_PYTHON_PROFILER_EXTENDED_FILE_NAME = True
SILKY_AUTHENTICATION = True  # User must login
SILKY_AUTHORISATION = True  # User must have permissions
SILKY_META = True
SILKY_INTERCEPT_PERCENT = 25


# django-csp

CONTENT_SECURITY_POLICY = {
	"EXCLUDE_URL_PREFIXES": ["/cms/"],
	"DIRECTIVES": {
		"default-src": [SELF],
		"script-src": [NONCE, UNSAFE_EVAL, STRICT_DYNAMIC],
		"script-src-elem": [SELF, NONCE],
		"style-src": [SELF, NONCE],
		"style-src-elem": [SELF, UNSAFE_INLINE, "fonts.googleapis.com"],
		"style-src-attr": [SELF, UNSAFE_INLINE],
		"frame-ancestors": [SELF],
		"img-src": [SELF, "data:", "opencollective.com"],
		"font-src": [SELF, "data:", "fonts.gstatic.com"],
		"object-src": [NONE],
		"form-action": [SELF],
		"report-uri": "/csp-report/",
	},
}


# django-honeypot

HONEYPOT_FIELD_NAME = "phone"


# django-debug-toolbar

DEBUG_TOOLBAR_PANELS = PANELS_DEFAULTS + ["cachalot.panels.CachalotPanel"]
DEBUG_TOOLBAR_CONFIG = {
	"SHOW_TOOLBAR_CALLBACK": "gameonlock.middleware.show_toolbar_superuser"
}


# nplusone

NPLUSONE_LOGGER = logging.getLogger("nplusone")
NPLUSONE_LOG_LEVEL = logging.WARN
NPLUSONE_RAISE = False
LOGGING["loggers"]["nplusone"] = {  # noqa: F405
	"handlers": ["console"],
	"level": logging.WARN,
}


# yesglot

YESGLOT_LLM_MODEL = (os.getenv("YESGLOT_LLM_MODEL"),)
YESGLOT_API_KEY = (os.getenv("YESGLOT_API_KEY"),)
